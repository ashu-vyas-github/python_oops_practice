#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
@author: ashutosh

Class definition of Student class used as a toy example for OOP concepts.

The Student module contains the Student class used as toy example to practice object-
oriented programming concepts. This will be updated throughout as new concepts are
learned and practiced.

OPTIONS ------------------------------------------------------------------
A description of each option that can be passed to this script.
(Placeholder for now, will be updated later.)

ARGUMENTS -------------------------------------------------------------
A description of each argument that can or must be passed to this script.
(Placeholder for now, will be updated later.)
"""


class Student:
    """
    Class definition of Student class used as a toy example for OOP concepts.

    The Student module contains the Student class used as toy example to practice object-
    oriented programming concepts. This will be updated throughout as new concepts are
    learned and practiced.

    OPTIONS ------------------------------------------------------------------
    A description of each option that can be passed to this script.
    (Placeholder for now, will be updated later.)

    ARGUMENTS -------------------------------------------------------------
    A description of each argument that can or must be passed to this script.
    (Placeholder for now, will be updated later.)
    """

    def __init__(self, student_id, name, age, gpa):
        """
        Student class constructor method for object initialization.

        Constructor initialization method used and called upon creation of Student object.

        Parameters
        ----------
        student_id : String
            Cumulative unique identifier (uuid) of the student in the whole school.
            Alpha-numeric value generated by name and class.
            Eg: student_id="MlCe15001"
        name : String
            Name of the student as "First-name Last-name" format.
            Eg: name="Michael Corleone"
        age : Int
            Age of the student in years.
            Positive valued integer, should not be more than 100.
            Eg: age=15
        gpa : Float
            Grade point average of the student out of 10.
            Eg: gpa=8.61
        """
        self.student_id = student_id
        self.name = name
        self._age = age
        self.gpa = gpa


my_student = Student(
    student_id="RtDyJr12003", name="Robert Downey Jr.", age=12, gpa=7.28
)
print("\nPassing argument...")
print("Object is at:", my_student)
print("Age:", my_student.age)
# print("Age:", my_student._age)
